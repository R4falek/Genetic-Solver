
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CONDITION EQUAL EQUALS ID INTEGER_NUMBER LOOP LP LPC MAIN MINUS NAME OR PLUS READ RP RPC SLASH STAR WRITE\n    program : main\n    \n    empty :\n    \n    main : MAIN LPC instructions RPC\n    \n    instructions : instruction\n        | instruction instructions\n        | empty\n\n    \n    instruction : loop\n        | condition\n        | var_assignment\n        | read\n        | write\n        | empty\n    \n    loop : LOOP LP comparisons RP LPC instructions RPC\n    \n    condition : CONDITION LP comparisons RP LPC instructions RPC\n    \n    comparisons : comparison\n        | comparison logic_operator comparison\n    \n    comparison : NAME EQUALS number\n            | NAME EQUALS NAME\n    \n    number : INTEGER_NUMBER\n    \n    var_assignment : NAME EQUAL number\n        | NAME EQUAL NAME\n        | NAME EQUAL math_operation\n    \n    math_operator : PLUS\n        | MINUS\n        | STAR\n        | SLASH\n    \n    math_operation : NAME math_operator NAME\n        | NAME math_operator number\n        | number math_operator number\n    \n    logic_operator : AND\n        | OR\n    \n    read : READ LP NAME RP\n    \n    write : WRITE LP NAME RP\n    '
    
_lr_action_items = {'MAIN':([0,],[3,]),'$end':([1,2,18,],[0,-1,-3,]),'LPC':([3,35,40,],[4,49,53,]),'RPC':([4,5,6,7,8,9,10,11,12,19,29,30,31,32,47,48,49,53,54,55,56,57,58,59,60,],[-2,18,-2,-6,-7,-8,-9,-10,-11,-5,-21,-20,-22,-19,-32,-33,-2,-2,-27,-28,-29,59,60,-13,-14,]),'LOOP':([4,6,7,8,9,10,11,12,29,30,31,32,47,48,49,53,54,55,56,59,60,],[13,13,-12,-7,-8,-9,-10,-11,-21,-20,-22,-19,-32,-33,13,13,-27,-28,-29,-13,-14,]),'CONDITION':([4,6,7,8,9,10,11,12,29,30,31,32,47,48,49,53,54,55,56,59,60,],[14,14,-12,-7,-8,-9,-10,-11,-21,-20,-22,-19,-32,-33,14,14,-27,-28,-29,-13,-14,]),'NAME':([4,6,7,8,9,10,11,12,20,21,22,23,24,29,30,31,32,36,37,38,39,41,42,43,44,45,47,48,49,53,54,55,56,59,60,],[15,15,-12,-7,-8,-9,-10,-11,27,27,29,33,34,-21,-20,-22,-19,27,-30,-31,51,54,-23,-24,-25,-26,-32,-33,15,15,-27,-28,-29,-13,-14,]),'READ':([4,6,7,8,9,10,11,12,29,30,31,32,47,48,49,53,54,55,56,59,60,],[16,16,-12,-7,-8,-9,-10,-11,-21,-20,-22,-19,-32,-33,16,16,-27,-28,-29,-13,-14,]),'WRITE':([4,6,7,8,9,10,11,12,29,30,31,32,47,48,49,53,54,55,56,59,60,],[17,17,-12,-7,-8,-9,-10,-11,-21,-20,-22,-19,-32,-33,17,17,-27,-28,-29,-13,-14,]),'LP':([13,14,16,17,],[20,21,23,24,]),'EQUAL':([15,],[22,]),'INTEGER_NUMBER':([22,39,41,42,43,44,45,46,],[32,32,32,-23,-24,-25,-26,32,]),'RP':([25,26,28,32,33,34,50,51,52,],[35,-15,40,-19,47,48,-16,-18,-17,]),'AND':([26,32,51,52,],[37,-19,-18,-17,]),'OR':([26,32,51,52,],[38,-19,-18,-17,]),'EQUALS':([27,],[39,]),'PLUS':([29,30,32,],[42,42,-19,]),'MINUS':([29,30,32,],[43,43,-19,]),'STAR':([29,30,32,],[44,44,-19,]),'SLASH':([29,30,32,],[45,45,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'main':([0,],[2,]),'instructions':([4,6,49,53,],[5,19,57,58,]),'instruction':([4,6,49,53,],[6,6,6,6,]),'empty':([4,6,49,53,],[7,7,7,7,]),'loop':([4,6,49,53,],[8,8,8,8,]),'condition':([4,6,49,53,],[9,9,9,9,]),'var_assignment':([4,6,49,53,],[10,10,10,10,]),'read':([4,6,49,53,],[11,11,11,11,]),'write':([4,6,49,53,],[12,12,12,12,]),'comparisons':([20,21,],[25,28,]),'comparison':([20,21,36,],[26,26,50,]),'number':([22,39,41,46,],[30,52,55,56,]),'math_operation':([22,],[31,]),'logic_operator':([26,],[36,]),'math_operator':([29,30,],[41,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> main','program',1,'p_program','Parser.py',91),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',97),
  ('main -> MAIN LPC instructions RPC','main',4,'p_main','Parser.py',103),
  ('instructions -> instruction','instructions',1,'p_instructions','Parser.py',109),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','Parser.py',110),
  ('instructions -> empty','instructions',1,'p_instructions','Parser.py',111),
  ('instruction -> loop','instruction',1,'p_instruction','Parser.py',121),
  ('instruction -> condition','instruction',1,'p_instruction','Parser.py',122),
  ('instruction -> var_assignment','instruction',1,'p_instruction','Parser.py',123),
  ('instruction -> read','instruction',1,'p_instruction','Parser.py',124),
  ('instruction -> write','instruction',1,'p_instruction','Parser.py',125),
  ('instruction -> empty','instruction',1,'p_instruction','Parser.py',126),
  ('loop -> LOOP LP comparisons RP LPC instructions RPC','loop',7,'p_loop','Parser.py',132),
  ('condition -> CONDITION LP comparisons RP LPC instructions RPC','condition',7,'p_condition','Parser.py',138),
  ('comparisons -> comparison','comparisons',1,'p_comparisons','Parser.py',144),
  ('comparisons -> comparison logic_operator comparison','comparisons',3,'p_comparisons','Parser.py',145),
  ('comparison -> NAME EQUALS number','comparison',3,'p_comparison','Parser.py',154),
  ('comparison -> NAME EQUALS NAME','comparison',3,'p_comparison','Parser.py',155),
  ('number -> INTEGER_NUMBER','number',1,'p_number','Parser.py',161),
  ('var_assignment -> NAME EQUAL number','var_assignment',3,'p_var_assignment','Parser.py',167),
  ('var_assignment -> NAME EQUAL NAME','var_assignment',3,'p_var_assignment','Parser.py',168),
  ('var_assignment -> NAME EQUAL math_operation','var_assignment',3,'p_var_assignment','Parser.py',169),
  ('math_operator -> PLUS','math_operator',1,'p_math_operator','Parser.py',175),
  ('math_operator -> MINUS','math_operator',1,'p_math_operator','Parser.py',176),
  ('math_operator -> STAR','math_operator',1,'p_math_operator','Parser.py',177),
  ('math_operator -> SLASH','math_operator',1,'p_math_operator','Parser.py',178),
  ('math_operation -> NAME math_operator NAME','math_operation',3,'p_math_operation','Parser.py',184),
  ('math_operation -> NAME math_operator number','math_operation',3,'p_math_operation','Parser.py',185),
  ('math_operation -> number math_operator number','math_operation',3,'p_math_operation','Parser.py',186),
  ('logic_operator -> AND','logic_operator',1,'p_logic_operator','Parser.py',192),
  ('logic_operator -> OR','logic_operator',1,'p_logic_operator','Parser.py',193),
  ('read -> READ LP NAME RP','read',4,'p_read','Parser.py',202),
  ('write -> WRITE LP NAME RP','write',4,'p_write','Parser.py',209),
]
